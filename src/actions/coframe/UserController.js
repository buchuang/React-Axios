//This file is automatically generated

// user-controller

import { UserController } from '../controller';
export default {
    actions: {
        [UserController.create.method] : {
            summary: '新增用户, 可同时绑定员工。一个员工最多只能绑定一个用户',
            method: 'post',
            url: (payload) => `/api/users`,
            parameters: [{'in':'body','name':'user','description':'user','required':true,'schema':{'originalRef':'用户','$ref':'#/definitions/用户'}}],
        },
        [UserController.deleteByIds.method] : {
            summary: '删除用户, 只删用户, 不删对应的人员',
            method: 'delete',
            url: (payload) => `/api/users/${payload.ids}`,
            parameters: [{'name':'ids','in':'path','description':'ids','required':true,'type':'string'}],
        },
        [UserController.disableUser.method] : {
            summary: '禁用用户',
            method: 'post',
            url: (payload) => `/api/users/${payload.id}/disable`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'}],
        },
        [UserController.enableUser.method] : {
            summary: '启用用户',
            method: 'post',
            url: (payload) => `/api/users/${payload.id}/enable`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'}],
        },
        [UserController.findById.method] : {
            summary: '按主键查询',
            method: 'get',
            url: (payload) => `/api/users/${payload.id}`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'}],
        },
        [UserController.getAuthToken.method] : {
            summary: '获取认证token',
            method: 'get',
            url: (payload) => `/api/users/get/auth-token`,
            parameters: [],
        },
        [UserController.getSsoUser.method] : {
            summary: '获取当前登录用户',
            method: 'get',
            url: (payload) => `/api/users/get/current-user`,
            parameters: [],
        },
        [UserController.listRoles.method] : {
            summary: '获取某个用户的角色',
            method: 'get',
            url: (payload) => `/api/users/${payload.id}/roles`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'}],
        },
        [UserController.listUserFunctionCodes.method] : {
            summary: '获取用户的所有可用的功能编码',
            method: 'get',
            url: (payload) => `/api/users/function-codes`,
            parameters: [{'name':'ownerId','in':'query','description':'ownerId','required':false,'type':'string'},{'name':'ownerType','in':'query','description':'ownerType','required':false,'type':'string'}],
        },
        [UserController.listUserFunctions.method] : {
            summary: '获取用户的所有可用的功能',
            method: 'get',
            url: (payload) => `/api/users/functions`,
            parameters: [{'name':'ownerId','in':'query','description':'ownerId','required':false,'type':'string'},{'name':'ownerType','in':'query','description':'ownerType','required':false,'type':'string'}],
        },
        [UserController.listUserMenus.method] : {
            summary: '获取用户的所有菜单',
            method: 'get',
            url: (payload) => `/api/users/menus`,
            parameters: [{'name':'ownerId','in':'query','description':'ownerId','required':false,'type':'string'},{'name':'ownerType','in':'query','description':'ownerType','required':false,'type':'string'}],
        },
        [UserController.modifyPassword.method] : {
            summary: '修改用户密码',
            method: 'put',
            url: (payload) => `/api/users/${payload.id}/modify-password`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'},{'in':'body','name':'password','description':'password','required':true,'schema':{'originalRef':'UserPassword','$ref':'#/definitions/UserPassword'}}],
        },
        [UserController.pagingByCriteria.method] : {
            summary: '分页查询所有用户',
            method: 'get',
            url: (payload) => `/api/users/page-search`,
            parameters: [{'name':'bindState','in':'query','description':'绑定状态过滤，binded 或者 unBinded，或者不给为空不过滤','required':false,'type':'string'},{'name':'employeeId','in':'query','required':false,'type':'string'},{'name':'id','in':'query','description':'Id','required':false,'type':'string'},{'name':'memberState','in':'query','description':'成员相关，成员状态，取值为 isMember 或 notMember。此值需 ownerType 与 ownerId 也同时赋值才意义。isMember 查询为此领域成员的用户，notMember 则查询不为此领域成员的用户，用于往某领域内添加成员时的用户过滤','required':false,'type':'string'},{'name':'name','in':'query','description':'名称','required':false,'type':'string'},{'name':'ownerId','in':'query','description':'成员相关，成员所属的领域Id','required':false,'type':'string'},{'name':'ownerType','in':'query','description':'成员相关，成员所属的领域类型','required':false,'type':'string'},{'name':'pageNum','in':'query','required':false,'type':'integer','format':'int32'},{'name':'pageSize','in':'query','required':false,'type':'integer','format':'int32'},{'name':'status','in':'query','required':false,'type':'string'},{'name':'usingLikeQuery','in':'query','description':'是否使用模糊查询','required':false,'type':'boolean'}],
        },
        [UserController.resetPassword.method] : {
            summary: '重置用户密码',
            method: 'put',
            url: (payload) => `/api/users/${payload.id}/reset-password`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'}],
        },
    },
    // state: {},
    // mutations: {},
    // getters: {}
}
